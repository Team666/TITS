<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:faceTITS.UserControls">
    <SolidColorBrush x:Key="None" Color="Transparent" />
	<SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ListBox.Static.Border" Color="#0000"/>
	<SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
    
    <Style x:Key="PlaylistListBox" TargetType="{x:Type local:SongListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
			<Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SongListBox}">
                    <ListViewItem Content="Content" HorizontalAlignment="Left" Height="280" VerticalAlignment="Top" Width="280"/>
                    <ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false"/>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="true"/>
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
                    <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="{StaticResource None}" StrokeThickness="0" StrokeDashArray="0 0"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
	<SolidColorBrush x:Key="Item.MouseOver.Border" Color="Transparent"/>
	<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
	<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
	<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
	<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
    
	<Style x:Key="PlaylistSongItem" TargetType="{x:Type local:SongItem}">
		<Style.Triggers>
			<Trigger Property="IsActive" Value="False"/>
		</Style.Triggers>
		<Setter Property="SnapsToDevicePixels" Value="False"/> <!-- For that Zune-like fuzz -->
		<Setter Property="Padding" Value="5,2.5"/>
        <Setter Property="Margin" Value="0,0.1" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="TextElement.FontFamily" Value="Segoe UI"/>
        <Setter Property="TextElement.FontWeight" Value="Semibold"/>
        <Setter Property="TextElement.Foreground" Value="#FF373A3D"/>
        <Setter Property="Template">
			<Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SongItem}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#206A6A6A"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="False"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#446A6A6A"/>
                            <Setter Property="TextElement.Foreground" Value="#F000"/>
                        </MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#446A6A6A"/>
                            <Setter Property="TextElement.Foreground" Value="#F000"/>
                        </MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="#FFF223A9"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="PlaylistSongItemTsu" TargetType="{x:Type local:SongItem}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="True"/> <!-- For that Zune-like fuzz -->
        <Setter Property="Padding" Value="2,0"/>
        <Setter Property="Margin" Value="0,1" />
        <Setter Property="TextElement.FontFamily" Value="Segoe UI"/>
        <Setter Property="TextElement.FontWeight" Value="Semibold"/>
        <Setter Property="TextElement.Foreground" Value="#FF373A3D"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SongItem}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="SelectedUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Border" Value="#206A6A6A"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Border" Value="#446A6A6A"/>
                            <Setter Property="TextElement.Foreground" Value="#F000"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Border" Value="#446A6A6A"/>
                            <Setter Property="TextElement.Foreground" Value="#F000"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground" TargetName="Border" Value="#FFF223A9"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <!-- Resource dictionary entries should be defined here. -->
</ResourceDictionary>